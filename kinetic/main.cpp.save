#include<fstream>
#include<algorithm>
using namespace std;
 
#define BM 200005
#define TM 30005
#define a first
#define b second
#define per pair<int,int>
 
per p[505];
int mt[TM][505],n,m;
int cmp(per x,per y){
    if(x.b==y.b)return x.a<y.a;
    return x.b<y.b;
}
int cbx(int x,int pz){
    int i=1,j=n,rez=-1000,mj;
    for(;i<=j;){
        mj=(i+j)/2;
        if(mt[pz][mj]>=x){
            rez=mj;
            j=mj-1;
        }
        else i=mj+1;
    }
    return rez;
}
int cby(int y,int pz){
    int i=1,j=n,rez=-1000,mj;
    for(;i<=j;){
        mj=(i+j)/2;
        if(mt[pz][mj]<=y){
            rez=mj;
            i=mj+1;
        }
        else j=mj-1;
    }
    return rez;
}
int cbx2(int x,int t){
    int i=1,j=n,rez=-1000,mj;
    for(;i<=j;){
        mj=(i+j)/2;
        if(p[mj].a+p[mj].b*t>=x){
            rez=mj;
            j=mj-1;
        }
        else i=mj+1;
    }
    return rez;
}
int cby2(int y,int t){
    int i=1,j=n,rez=-1000,mj;
    for(;i<=j;){
        mj=(i+j)/2;
        if(p[mj].a+p[mj].b*t<=y){
            rez=mj;
            i=mj+1;
        }
        else j=mj-1;
    }
    return rez;
}
int main () {
    int i,x,y,t,r,j,v1,v2;
    ifstream f("kinetic.in");
    ofstream g("kinetic.out");
    f>>n>>m;
    for(i=1;i<=n;++i)f>>p[i].a>>p[i].b;
    sort(p+1,p+n+1,cmp);
    for(i=0;i<=TM-3;++i){
        for(j=1;j<=n;++j)mt[i][j]=p[j].a+p[j].b*i;
        sort(mt[i]+1,mt[i]+n+1);
    }
    for(i=1;i<=m;++i){
        f>>x>>y>>t;
        if(x>y)swap(x,y);
        if(t<=TM-3){
            v1=cby(y,t);
            v2=cbx(x,t);
            if(v1<=0||v2<=0)g<<"0\n";
            else g<<v1-v2+1<<"\n";
        }
        else {
            v1=cby2(y,t);
            v2=cbx2(x,t);
            if(v1<=0||v2<=0)g<<"0\n";
            else g<<v1-v2+1<<"\n";
        }
    }
    return 0;
}